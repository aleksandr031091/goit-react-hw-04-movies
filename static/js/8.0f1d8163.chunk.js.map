{"version":3,"sources":["components/reviews/Reviews.jsx"],"names":["MouvesReviews","state","reviews","searchMouvesReviews","this","props","match","params","movieId","then","data","setState","results","catch","error","console","log","length","map","review","author","content","id","Component"],"mappings":"kPAsCeA,E,4MAlCbC,MAAQ,CAAEC,QAAS,I,uDAEnB,WAAqB,IAAD,OAClBC,YAAoBC,KAAKC,MAAMC,MAAMC,OAAOC,SACzCC,MAAK,SAACC,GACL,EAAKC,SAAS,CACZT,QAASQ,EAAKE,aAGjBC,OAAM,SAACC,GAAD,OAAWC,QAAQC,IAAIF,Q,oBAGlC,WAAU,IACAZ,EAAYE,KAAKH,MAAjBC,QAER,OACE,8BACGA,EAAQe,OAAS,EAChB,6BACGf,EAAQgB,KAAI,SAACC,GAAD,OACX,+BACE,yCAAYA,EAAOC,UACnB,4BAAID,EAAOE,YAFJF,EAAOG,SAOpB,gF,GA5BkBC","file":"static/js/8.0f1d8163.chunk.js","sourcesContent":["import { Component } from \"react\";\nimport { searchMouvesReviews } from \"../../service/movieApi\";\n\nclass MouvesReviews extends Component {\n  state = { reviews: [] };\n\n  componentDidMount() {\n    searchMouvesReviews(this.props.match.params.movieId)\n      .then((data) => {\n        this.setState({\n          reviews: data.results,\n        });\n      })\n      .catch((error) => console.log(error));\n  }\n\n  render() {\n    const { reviews } = this.state;\n\n    return (\n      <div>\n        {reviews.length > 0 ? (\n          <ul>\n            {reviews.map((review) => (\n              <li key={review.id}>\n                <p>Author: {review.author}</p>\n                <p>{review.content}</p>\n              </li>\n            ))}\n          </ul>\n        ) : (\n          <h3>We don't have any reviews for this movie</h3>\n        )}\n      </div>\n    );\n  }\n}\n\nexport default MouvesReviews;\n"],"sourceRoot":""}